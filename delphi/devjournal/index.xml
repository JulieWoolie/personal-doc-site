<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev Journal on My New Hugo Site</title><link>https://juliewoolie.com/delphi/devjournal/</link><description>Recent content in Dev Journal on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://juliewoolie.com/delphi/devjournal/index.xml" rel="self" type="application/rss+xml"/><item><title>28-01-2025</title><link>https://juliewoolie.com/delphi/devjournal/28-01-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/28-01-2025/</guid><description>Intro It's been weeks, maybe even months since I've touched this project... oh god. I started finally implementing the renderer I created in the delphirender module. Starting with a very simple Flow layout that just places elements after each other. I'll implement the rest of the layout once I know the configuration and projection of entities is correct. Afterword It's 7 hours later. I hate this project... I spent almost all of today thinking about and fixing issues related to the most simple parts of rendering and layout possible.</description></item><item><title>Nightmares</title><link>https://juliewoolie.com/delphi/devjournal/05-02-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/05-02-2025/</guid><description>Today I'll most likely be fixing yesterday's bugs, getting the Flow layout completely functional with auto margins and stuff. I started by adding support the box-sizing property to Chimera and NLayout. The offset bug I described yesterday. The blue is where the black background is intended to be located. The item element (pickaxe) is also wildly offset from where it is intended to be. Another bug to fix... On top of the previous bug, when a page is spawned, the backgrounds, outlines and anything other than content is blank, resulting in this.</description></item><item><title>Visual bug fixes and support for inline data</title><link>https://juliewoolie.com/delphi/devjournal/06-02-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/06-02-2025/</guid><description>The Day started with me testing the measurement system only to find out it worked... like as far as I could see, it worked. This was unexpected. There were some visual bugs I found, that I fixed after adjusting the BLOCK_OFFSET_X from yesterday to 0.0717 which was more accurate. And by making regular text render objects also apply the offset. (Before, only the empty text displays used the offset) The results produced by this were actually really good and fixed a visual error I encountered this morning: Before adjusting the constant.</description></item><item><title>Major rendering and layout updates</title><link>https://juliewoolie.com/delphi/devjournal/08-02-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/08-02-2025/</guid><description>This, unlike the previous entries is being written retrospectively, so there will be missing screenshots and things. I added support for inline margins, this means implementing the margin-inline, margin-inline-start and margin-inline-end Properties. Normal margins won't be used on non-block render objects anymore, but inline margins will. After that, I mostly finished implementing the Flow layout algorithm, with the caveat that I don't know how to handle max sizes on elements without them being too large or small.</description></item><item><title>DOM Restructuring And Lots of Boring Systems</title><link>https://juliewoolie.com/delphi/devjournal/19-02-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/19-02-2025/</guid><description>Intro Yeah, I kinda forgot about this project after I got a bit burned out. But I'm back and with some major changes to the structure of the API and the DOM tree. But before all that, little sneak peek at the dev tools I started working on: I'm just proud of how all of highlighting stuff and CSS style changing on the fly works. DOM Restructuring For context, before this, the actual part of the document represented by Delphi's API was the &amp;lt;body&amp;gt; element.</description></item><item><title>Input elements and devtools</title><link>https://juliewoolie.com/delphi/devjournal/02-03-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/02-03-2025/</guid><description>Been a while since I wrote any updates here, apologies, real life got in the way. But alas, I've reworked some stuff and added support for &amp;lt;input/&amp;gt; elements. I had some issues implementing these elements and confusion conceptually, mentioned below. Going public I finally went "public" with this project, meaning I posted it on HangarMC and made the repository public and posted about it to the PaperMC Discord. So the project's finally open source.</description></item><item><title>Scripting support and some minor bug fixes</title><link>https://juliewoolie.com/delphi/devjournal/24-05-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/24-05-2025/</guid><description>Oh my god, it's been awhile since I even touched this project. And here I am, I'm back to work on it... for another 2 or 3 days until I other things take my attention away from it. JS Support I've added JS support, although currently it's very basic and very unsecure. In keeping with my love of ancient greek stuff, the JS integration module has been named "Hephaestus", as the smith that's going to make these menus actually functional.</description></item><item><title>Scripting Expansions</title><link>https://juliewoolie.com/delphi/devjournal/26-05-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/26-05-2025/</guid><description>Script expansions I added scheduling functions! setInterval(cb, delay, interval) and setTimeout(cb, delay) are now supported. But keep in mind, they take in delays and intervals in ticks, not milliseconds. Both of these functions return an ID integer that represents their task ID. There is of course an accompanying clearTimeout(taskId) to cancel both interval and timeout tasks. This was all made possible with the scheduling API I added to the DocumentView.</description></item><item><title>Canvas Elements and Trying To Get The Word Out There</title><link>https://juliewoolie.com/delphi/devjournal/09-08-2025/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juliewoolie.com/delphi/devjournal/09-08-2025/</guid><description>Intro Alright, it's been another long while (4 months) since I posted an update about how this plugin is going. Been busy (with everything except working on the damned flexbox support). Canvas elements! Canvas elements are basically images, that you can draw whatever you want on to. I thought these would be good for people wanting to implement more complex features for their menus, and would also be cool for potential providing a basis for an &amp;lt;img&amp;gt; element in the future.</description></item></channel></rss>